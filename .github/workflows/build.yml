name: Build PineFlash

on:
  push:
    branches: [ master, main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ master, main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev libssl-dev pkg-config libusb-1.0-0-dev libudev-dev
        
    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Cache cargo index
      uses: actions/cache@v4
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Cache cargo build
      uses: actions/cache@v4
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Build
      run: cargo build --release --verbose
      
    - name: Run tests
      run: cargo test --verbose
      
    - name: Upload Linux binary
      uses: actions/upload-artifact@v4
      with:
        name: pineflash-linux-x86_64
        path: target/release/pineflash

  build-appimage:
    runs-on: ubuntu-latest
    needs: build-linux
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      
    - name: Install AppImage dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev libssl-dev pkg-config libusb-1.0-0-dev libudev-dev wget file
        
    - name: Download and install appimagetool
      run: |
        wget -q https://github.com/AppImage/appimagetool/releases/download/continuous/appimagetool-x86_64.AppImage
        chmod +x appimagetool-x86_64.AppImage
        sudo mv appimagetool-x86_64.AppImage /usr/local/bin/appimagetool
        
    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Cache cargo index
      uses: actions/cache@v4
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Install cargo-appimage
      run: cargo install cargo-appimage
      
    - name: Build AppImage
      run: |
        export APPIMAGE_EXTRACT_AND_RUN=1
        cargo appimage --features=appimage
      
    - name: Upload AppImage
      uses: actions/upload-artifact@v4
      with:
        name: pineflash-linux-x86_64.AppImage
        path: target/appimage/*.AppImage

  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: x86_64-pc-windows-msvc
        
    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Cache cargo index
      uses: actions/cache@v4
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Cache cargo build
      uses: actions/cache@v4
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Build
      run: cargo build --release --verbose
      
    - name: Run tests
      run: cargo test --verbose
      
    - name: Upload Windows executable
      uses: actions/upload-artifact@v4
      with:
        name: pineflash-windows-x86_64.exe
        path: target/release/pineflash.exe

  build-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        include:
          - target: x86_64-apple-darwin
            name: macos-x86_64
          - target: aarch64-apple-darwin
            name: macos-aarch64
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}
        
    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-${{ matrix.target }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Cache cargo index
      uses: actions/cache@v4
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-${{ matrix.target }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Cache cargo build
      uses: actions/cache@v4
      with:
        path: target
        key: ${{ runner.os }}-${{ matrix.target }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Build
      run: cargo build --release --target ${{ matrix.target }} --verbose
      
    - name: Run tests (x86_64 only)
      if: matrix.target == 'x86_64-apple-darwin'
      run: cargo test --verbose
      
    - name: Upload macOS binary
      uses: actions/upload-artifact@v4
      with:
        name: pineflash-${{ matrix.name }}
        path: target/${{ matrix.target }}/release/pineflash

  create-release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [build-linux, build-appimage, build-windows, build-macos]
    runs-on: ubuntu-latest
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      
    - name: List artifacts
      run: ls -R
      
    - name: Create checksums
      run: |
        for file in pineflash-*/*; do
          if [ -f "$file" ]; then
            sha256sum "$file" > "$file.sha256"
          fi
        done
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          pineflash-linux-x86_64/pineflash
          pineflash-linux-x86_64/pineflash.sha256
          pineflash-linux-x86_64.AppImage/*.AppImage
          pineflash-linux-x86_64.AppImage/*.AppImage.sha256
          pineflash-windows-x86_64.exe/pineflash.exe
          pineflash-windows-x86_64.exe/pineflash.exe.sha256
          pineflash-macos-x86_64/pineflash
          pineflash-macos-x86_64/pineflash.sha256
          pineflash-macos-aarch64/pineflash
          pineflash-macos-aarch64/pineflash.sha256
        draft: true
        prerelease: false
        generate_release_notes: true